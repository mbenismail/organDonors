security:
    encoders:
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route
            access_denied_handler: App\Security\AccessDeniedHandler

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/donor/new, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/donor/confirmation, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/medicine/request/new, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/doctor/request/new, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/, role: ROLE_USER }
        - { path: ^/admin/users/, roles: [ROLE_ADMIN] }
        - { path: ^/admin/hospital/, roles: [ROLE_ADMIN] }
        - { path: ^/admin/patients/, roles: [ROLE_ADMIN , ROLE_EMPL] }
        - { path: ^/admin/patients/\d+/edit, roles: [ROLE_EMPL] }
        - { path: ^/admin/patients/new, roles: [ROLE_EMPL] }
        # - { path: ^/profile, roles: ROLE_USER }
